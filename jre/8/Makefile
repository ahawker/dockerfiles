.DEFAULT_GOAL := help

ENVFILE ?= .env
include $(ENVFILE)
export $(shell sed 's/=.*//' $(ENVFILE))

export DOCKERFILES_DIR ?= ..

BUILD_DEPS := $(shell find . -type f \( -iname '*' ! -iname '*build' \))
BASE_IMAGE_DEPS := $(shell grep -ril "^IMAGE=$(BASE_IMAGE)" $(DOCKERFILES_DIR) | xargs dirname)

$(BASE_IMAGE)-%:
	@$(MAKE) -C $(BASE_IMAGE_DEPS) $*
	@echo $(REPO)/$(BASE_IMAGE):$(TAG) > $@ && touch -t $(BUILD_TS_TOUCH) $@

.PHONY: all
all: all-requirements $(BUILD) build $(DEPLOY) deploy  ## Build and deploy image created from Dockerfile.

build: $(BASE_IMAGE)-build $(BUILD_DEPS) | build-requirements  ## Build image from Dockerfile.
	@docker build \
		--rm \
		--force-rm \
		--tag $(REPO)/$(IMAGE):$(TAG) \
		--tag $(REPO)/$(IMAGE):$(JAVA_VERSION) \
		--tag $(REPO)/$(IMAGE):latest \
		--label $(LABEL_PREFIX).image=$(IMAGE) \
		--label $(LABEL_PREFIX).image.base=$(BASE_IMAGE) \
		--build-arg LABEL_PREFIX=$(LABEL_PREFIX) \
		--build-arg REPO=$(REPO) \
		--build-arg TAG=$(TAG) \
		--build-arg BASE_IMAGE=$(BASE_IMAGE) \
		--build-arg JAVA_VERSION=$(JAVA_VERSION) \
		--build-arg JAVA_MAJOR_VERSION=$(JAVA_MAJOR_VERSION) \
		--build-arg JAVA_MINOR_VERSION=$(JAVA_MINOR_VERSION) \
		--build-arg ALPINE_JAVA_PACKAGE_NAME=$(ALPINE_JAVA_PACKAGE_NAME) \
		--build-arg ALPINE_JAVA_PACKAGE_VERSION=$(ALPINE_JAVA_PACKAGE_VERSION) \
		.
	@echo $(REPO)/$(IMAGE):$(TAG) > build && touch -t $(BUILD_TS_TOUCH) build

.PHONY: clean
clean: $(CLEAN)  ## Clean state generated by previous images built from Dockerfile.
	@rm *build > /dev/null 2>&1 || true
	@docker system prune --all --force --filter "label=$(LABEL_PREFIX).image=$(IMAGE)" --filter "until=$(BUILD_TS)"

.PHONY: deploy
deploy: deploy-requirements $(DEPLOY)  ## Deploy image built from Dockerfile.
	@docker push $(REPO)/$(IMAGE):$(TAG)
	@docker push $(REPO)/$(IMAGE):$(JAVA_VERSION)
	@docker push $(REPO)/$(IMAGE):latest

.PHONY: all-requirements
all-requirements: build-requirements deploy-requirements

.PHONY: build-requirements
build-requirements: requires-REPO \
	requires-LABEL_PREFIX \
	requires-TAG \
	requires-IMAGE \
	requires-BASE_IMAGE \
	requires-JAVA_VERSION \
	requires-JAVA_MAJOR_VERSION \
	requires-JAVA_MINOR_VERSION \
	requires-ALPINE_JAVA_PACKAGE_NAME \
	requires-ALPINE_JAVA_PACKAGE_VERSION

.PHONY: deploy-requirements
deploy-requirements: requires-REPO \
	requires-TAG \
	requires-IMAGE

requires-%:
	@if [ -z '${${*}}' ]; then echo 'Required variable "$*" not set' && exit 1; fi

.PHONY: help
help: ## Print Makefile usage.
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}' $(MAKEFILE_LIST)
