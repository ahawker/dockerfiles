# dockerfiles/alpine/.common
#
# Dockerfile for Alpine Linux images
ARG BASE_IMAGE_REPO
ARG BASE_IMAGE
ARG BASE_IMAGE_TAG

FROM $BASE_IMAGE_REPO/$BASE_IMAGE:$BASE_IMAGE_TAG

ARG USR
ARG GRP
ARG USR_ID
ARG GRP_ID
ARG REPO
ARG TAG
ARG COMMIT
ARG BUILD_ID
ARG BUILD_TS
ARG VERSION
ARG DUMB_INIT_VERSION
ARG MAINTAINER
ARG LABEL_PREFIX
ARG ENV_PREFIX
ARG WORKDIR
ARG ALPINE_VERSION
ARG ALPINE_CA_CERTIFICATES_PACKAGE_NAME
ARG ALPINE_CA_CERTIFICATES_PACKAGE_VERSION
ARG ALPINE_WGET_PACKAGE_NAME
ARG ALPINE_WGET_PACKAGE_VERSION

RUN test -n "$USR" && \
    test -n "$GRP" && \
    test -n "$USR_ID" && \
    test -n "$GRP_ID" && \
    test -n "$REPO" && \
    test -n "$TAG" && \
    test -n "$COMMIT" && \
    test -n "$BUILD_ID" && \
    test -n "$BUILD_TS" && \
    test -n "$VERSION" && \
    test -n "$DUMB_INIT_VERSION" && \
    test -n "$MAINTAINER" && \
    test -n "$LABEL_PREFIX" && \
    test -n "$ENV_PREFIX" && \
    test -n "$WORKDIR" && \
    test -n "$ALPINE_VERSION" && \
    test -n "$ALPINE_CA_CERTIFICATES_PACKAGE_NAME" && \
    test -n "$ALPINE_CA_CERTIFICATES_PACKAGE_VERSION" && \
    test -n "$ALPINE_WGET_PACKAGE_NAME" && \
    test -n "$ALPINE_WGET_PACKAGE_VERSION"

LABEL $LABEL_PREFIX.commit=$COMMIT \
      $LABEL_PREFIX.build.id=$BUILD_ID \
      $LABEL_PREFIX.build.ts=$BUILD_TS \
      $LABEL_PREFIX.dumb-init.version=$DUMB_INIT_VERSION \
      $LABEL_PREFIX.maintainer=$MAINTAINER \
      $LABEL_PREFIX.alpine.version=$ALPINE_VERSION

ENV DOCKERFILES_ENV_PREFIX=$ENV_PREFIX \
    ${ENV_PREFIX}_USR=$USR \
    ${ENV_PREFIX}_GRP=$GRP \
    ${ENV_PREFIX}_USR_ID=$USR_ID \
    ${ENV_PREFIX}_GRP_ID=$GRP_ID \
    ${ENV_PREFIX}_REPO=$REPO \
    ${ENV_PREFIX}_TAG=$TAG \
    ${ENV_PREFIX}_COMMIT=$COMMIT \
    ${ENV_PREFIX}_BUILD_ID=$BUILD_ID \
    ${ENV_PREFIX}_BUILD_TS=$BUILD_TS \
    ${ENV_PREFIX}_VERSION=$VERSION \
    ${ENV_PREFIX}_DUMB_INIT_VERSION=$DUMB_INIT_VERSION \
    ${ENV_PREFIX}_MAINTAINER=$MAINTAINER \
    ${ENV_PREFIX}_LABEL_PREFIX=$LABEL_PREFIX \
    ${ENV_PREFIX}_WORKDIR=$WORKDIR \
    ${ENV_PREFIX}_ALPINE_VERSION=$ALPINE_VERSION \
    ${ENV_PREFIX}_ALPINE_CA_CERTIFICATES_PACKAGE_NAME=$ALPINE_CA_CERTIFICATES_PACKAGE_NAME \
    ${ENV_PREFIX}_ALPINE_CA_CERTIFICATES_PACKAGE_VERSION=$ALPINE_CA_CERTIFICATES_PACKAGE_VERSION \
    ${ENV_PREFIX}_ALPINE_WGET_PACKAGE_NAME=$ALPINE_WGET_PACKAGE_NAME \
    ${ENV_PREFIX}_ALPINE_WGET_PACKAGE_VERSION=$ALPINE_WGET_PACKAGE_VERSION \
    LANG=C.UTF-8

RUN apk del --no-cache $ALPINE_WGET_PACKAGE_NAME && \
    apk add --no-cache $ALPINE_WGET_PACKAGE_NAME="$ALPINE_WGET_PACKAGE_VERSION" \
        $ALPINE_CA_CERTIFICATES_PACKAGE_NAME="$ALPINE_CA_CERTIFICATES_PACKAGE_VERSION" && \
    wget -O /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v${DUMB_INIT_VERSION}/dumb-init_${DUMB_INIT_VERSION}_amd64 && \
    chmod +x /usr/local/bin/dumb-init

RUN addgroup -S $GRP -g $GRP_ID && \
    adduser -S -G $GRP -u $USR_ID $USR && \
    mkdir -p /Users && \
    ln -s /home/$USR /Users/$USR

USER $USR

WORKDIR $WORKDIR

ENTRYPOINT ["/usr/local/bin/dumb-init", "--"]

CMD ["/usr/bin/env", "sh"]
